For generating SSH key :
git ssh-keygen -t rsa -C "contact.ruby0102@gmail.com"

for configuring the username and email:

git congif --global user.name "Ruby"
git config --global user.email "contact.ruby0102@gmail.com"

for  cloning project usinh SSH keys:

cd /path to where you want to clone the project/
git clone {sshkey link from github}

git status (to see all the files that are being updated )

git add filename
git commit -m "hdfhs"
git push
git pull (mix of git fetch and git merge)

git gui&
gitk&


#inside .git folder we have following things:

Head file stores the last commit id

Index file (here files are stored until we commit them, that is till the adding stage the files are in index folder)

# Commit ,tree and blob(binary large object)

git show -s --pretty=raw 334234(five or six digits of the commit )

git ls-tree 8483934(tree number(few digits))

git show 4o9r740(blob number(few digits))

Working directory:
	
	If we want to remove files after making changes we can use the command:
	Git checkout -- filename.extension
	
	If we want to remove all the changed files at once we can use the command:
	Git checkout .
	
	If we want to remove any files that we have created newly in the project and which doesn’t have a version yet we can do that by using force command:
	 git clear -xdf
	
	NOTE: These commands cant be undo

Staging area:
	Git reset -- filename

Local branch:
	Git reset HEAD^^ (head~2)…no of commits we want to rollback(^^=2)
	Git commit --amend -m "new commit message"
Remote repository:
Git revert <sha1>

Git reset:

Git reset --soft HEAD~1 (moves commit to added stage)
Git reset --mixed HEAD~1 (moves commit to un staged place)
Git reset -- hard HEAD~1 (moves or delete all the changes)



